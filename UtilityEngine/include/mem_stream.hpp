/**
* @file mem_stream.hpp
*
* @author Hourui (liquidmonkey)
*/
#ifndef __MEM_STREAM_HPP__
#define __MEM_STREAM_HPP__

#include "mem_stream_node.hpp"
#include "mem_buffer.hpp"
#include <iostream>

namespace Utility
{
////////////////////////////////////////////////////////////////////////////////////////////////////
namespace mem
{
////////////////////////////////////////////////////////////////////////////////////////////////////
class _stream_impl
{
public:
	_stream_impl(buffer_iface* buffer) :m_buffer(buffer) {}
	~_stream_impl(void) = default;
protected:
	template<class T>
	bool push(T& data);
protected:
	buffer_iface* m_buffer;
	std::cout
};
////////////////////////////////////////////////////////////////////////////////////////////////////
class ostream : public _stream_impl
{

};
////////////////////////////////////////////////////////////////////////////////////////////////////
}//namespace mem
////////////////////////////////////////////////////////////////////////////////////////////////////
}//namespace Utility 
#endif //__MEM_BUFFER_HPP__
